#if !canImport(ObjectiveC)
import XCTest

extension BitPackingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BitPackingTests = [
        ("testMultiByte8To3_Array", testMultiByte8To3_Array),
        ("testMultiByte8To3_ContiguousArray", testMultiByte8To3_ContiguousArray),
        ("testPackingPerformance_Array", testPackingPerformance_Array),
        ("testPackingPerformance_ContiguousArray", testPackingPerformance_ContiguousArray),
        ("testSingleByte8To2_Array", testSingleByte8To2_Array),
        ("testSingleByte8To2_ContiguousArray", testSingleByte8To2_ContiguousArray),
        ("testUnpackingPerformance_Array", testUnpackingPerformance_Array),
        ("testUnpackingPerformance_ContiguousArray", testUnpackingPerformance_ContiguousArray),
    ]
}

extension HexConversionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HexConversionTests = [
        ("testHexConversion", testHexConversion),
        ("testHexString", testHexString),
        ("testInitHex", testInitHex),
    ]
}

extension StreamCodingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StreamCodingTests = [
        ("testStreamDecoder", testStreamDecoder),
        ("testStreamEncoder", testStreamEncoder),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BitPackingTests.__allTests__BitPackingTests),
        testCase(HexConversionTests.__allTests__HexConversionTests),
        testCase(StreamCodingTests.__allTests__StreamCodingTests),
    ]
}
#endif
